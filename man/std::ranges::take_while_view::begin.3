.TH std::ranges::take_while_view::begin 3 "2021.11.17" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::ranges::take_while_view::begin \- std::ranges::take_while_view::begin

.SH Synopsis
   constexpr auto begin() requires (!__SimpleView<V>);           \fB(1)\fP \fI(since C++20)\fP
   constexpr auto begin() const requires ranges::range<const V>; \fB(2)\fP \fI(since C++20)\fP

   Returns an iterator to the first element of the view.

   Effectively returns ranges::begin(base_), where base_ is the underlying view.

   Overload \fB(1)\fP does not participate in overload resolution if V is a simple view (that
   is, if V and const V are views with the same iterator and sentinel types).

.SH Parameters

   \fI(none)\fP

.SH Return value

   ranges::begin(base_), where base_ is the underlying view

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   end        returns a sentinel representing the end
              \fI(public member function)\fP
   operator== compares a sentinel with an iterator returned from take_while_view::begin
              \fI(function)\fP

.SH Category:

     * Todo no example
