.TH std::chrono::operator==,(std::chrono::year) 3 "2021.11.17" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::operator==,(std::chrono::year) \- std::chrono::operator==,(std::chrono::year)

.SH Synopsis
   constexpr bool operator==( const std::chrono::year& x,             \fB(1)\fP \fI(since C++20)\fP
                              const std::chrono::year& y ) noexcept;
   constexpr std::strong_ordering operator<=>( const
   std::chrono::year& x,                                              \fB(2)\fP \fI(since C++20)\fP
                                               const
   std::chrono::year& y ) noexcept;

   Compare the two std::chrono::year x and y.

.SH Return value

   1) int(x) == int(y)
   2) int(x) <=> int(y)

.SH Example


// Run this code

 #include <iostream>
 #include <chrono>

 int main()
 {
     using namespace std::chrono;

     constexpr year y1{2020};
     constexpr year y2{2021};

     if (y1 == y2) {
         std::cout << "y1 and y2 are equal\\n";
     } else {
         std::cout << "y1 and y2 are not equal\\n";
     }

     static_assert(
         (2020y < 2023y) && (2020y == 2020y) && (2020y <= 2023y) &&
         (2023y > 2020y) && (2023y != 2020y) && (2023y >= 2020y)
     );
 }

.SH Output:

 y1 and y2 are not equal
