.TH std::forward_iterator 3 "2021.11.17" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::forward_iterator \- std::forward_iterator

.SH Synopsis
   Defined in header <iterator>
   template<class I>

     concept forward_iterator =
       std::input_iterator<I> &&
       std::derived_from</*ITER_CONCEPT*/<I>, std::forward_iterator_tag>  \fI(since C++20)\fP
   &&
       std::incrementable<I> &&

       std::sentinel_for<I, I>;

   This concept refines std::input_iterator by requiring that I also model
   std::incrementable (thereby making it suitable for multi-pass algorithms), and
   guaranteeing that two iterators to the same range can be compared against each
   other.

.SH See also

   input_iterator specifies that a type is an input iterator, that is, its referenced
   (C++20)        values can be read and it can be both pre- and post-incremented
                  (concept)
