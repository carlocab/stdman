.TH std::ranges::crbegin 3 "2021.11.17" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::ranges::crbegin \- std::ranges::crbegin

.SH Synopsis
   Defined in header <ranges>
   inline namespace /*unspecified*/ {

       inline constexpr /*unspecified*/ crbegin =          \fI(since C++20)\fP
   /*unspecified*/;                                        (customization point object)

   }
   Call signature
   template< class T >

       requires /* see below */

   constexpr std::input_or_output_iterator auto
   crbegin(T&& t);

   Returns an iterator to the first element of the const-qualified argument that is
   treated as a reversed sequence.

   range-rbegin-rend.svg

   Let CT be

    1. const std::remove_reference_t<T>& if the argument is a lvalue (i.e. T is an
       lvalue reference type),
    2. const T otherwise,

   a call to ranges::crbegin is expression-equivalent to
   ranges::rbegin(static_cast<CT&&>(t)).

   The return type models std::input_or_output_iterator in both cases.

.SH Example


// Run this code

 #include <iostream>
 #include <vector>
 #include <iterator>

 int main()
 {
     std::vector<int> v = { 3, 1, 4 };
     auto vi = std::ranges::crbegin(v);
     std::cout << *vi << '\\n';

     int a[] = { -5, 10, 15 };
     auto ai = std::ranges::crbegin(a);
     std::cout << *ai << '\\n';
 }

.SH Output:

 4
 15

.SH See also

   ranges::rbegin returns a reverse iterator to a range
   (C++20)        (customization point object)
   rbegin         returns a reverse iterator to a container or array
   crbegin        \fI(function template)\fP
   \fI(C++14)\fP
