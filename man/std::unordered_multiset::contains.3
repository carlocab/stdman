.TH std::unordered_multiset::contains 3 "2019.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::unordered_multiset::contains \- std::unordered_multiset::contains

.SH Synopsis
   bool contains( const Key& key ) const; \fB(1)\fP \fI(since C++20)\fP

   1) Checks if there is an element with key equivalent to key in the container.

.SH Parameters

   key - key value of the element to search for

.SH Return value

   true if there is such an element, otherwise false.

.SH Complexity

   Constant on average, worst case linear in the size of the container.

.SH Example

   
// Run this code

 #include <iostream>
 #include <unordered_set>
  
 int main()
 {
     std::unordered_multiset<int> example = {1, 2, 3, 4};
  
     if(example.contains(2)) {
         std::cout << "Found\\n";
     } else {
         std::cout << "Not found\\n";
     }
 }

.SH Output:

 Found

.SH See also

   find        finds element with specific key
               \fI(public member function)\fP 
   count       returns the number of elements matching specific key
               \fI(public member function)\fP 
   equal_range returns range of elements matching a specific key
               \fI(public member function)\fP 
