.TH std::operator==,!=,<,<=,>,>=(std::span) 3 "2019.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::operator==,!=,<,<=,>,>=(std::span) \- std::operator==,!=,<,<=,>,>=(std::span)

.SH Synopsis
   template <class T, std::ptrdiff_t X, class U, std::ptrdiff_t Y>  \fB(1)\fP
   constexpr bool operator==(std::span<T, X> l, std::span<U, Y> r);
   template <class T, std::ptrdiff_t X, class U, std::ptrdiff_t Y>  \fB(2)\fP
   constexpr bool operator!=(std::span<T, X> l, std::span<U, Y> r);
   template <class T, std::ptrdiff_t X, class U, std::ptrdiff_t Y>  \fB(3)\fP
   constexpr bool operator<(std::span<T, X> l, std::span<U, Y> r);
   template <class T, std::ptrdiff_t X, class U, std::ptrdiff_t Y>  \fB(4)\fP
   constexpr bool operator<=(std::span<T, X> l, std::span<U, Y> r);
   template <class T, std::ptrdiff_t X, class U, std::ptrdiff_t Y>  \fB(5)\fP
   constexpr bool operator>(std::span<T, X> l, std::span<U, Y> r);
   template <class T, std::ptrdiff_t X, class U, std::ptrdiff_t Y>  \fB(6)\fP
   constexpr bool operator>=(std::span<T, X> l, std::span<U, Y> r);

   Lexicographically compare the contents of two spans.

   1) Equivalent to return std::equal(l.begin(), l.end(), r.begin(), r.end());.
   2) Equivalent to return !(l == r);.
   3) Equivalent to return std::lexicographical_compare(l.begin(), l.end(), r.begin(),
   r.end());.
   4) Equivalent to return !(r < l);.
   5) Equivalent to return (r < l);.
   6) Equivalent to return !(l < r);.

.SH Parameters

   l, r - spans to compare

.SH Return value

   The result of the comparison.
