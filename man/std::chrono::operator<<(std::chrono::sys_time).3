.TH std::chrono::operator<<(std::chrono::sys_time) 3 "2021.11.17" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::operator<<(std::chrono::sys_time) \- std::chrono::operator<<(std::chrono::sys_time)

.SH Synopsis
   template <class CharT, class Traits, class Duration>

   std::basic_ostream<CharT, Traits>&                     \fB(1)\fP \fI(since C++20)\fP
   operator<<(std::basic_ostream<CharT, Traits>& os,

              const std::chrono::sys_time<Duration>& tp);
   template <class CharT, class Traits, class Duration>

   std::basic_ostream<CharT, Traits>&                     \fB(2)\fP \fI(since C++20)\fP
   operator<<(std::basic_ostream<CharT, Traits>& os,

              const std::chrono::sys_days& tp);

   Outputs tp into the stream os.

   1) Equivalent to:

 auto const dp = std::chrono::floor<std::chrono::days>(tp);
 os << std::format(os.getloc(), STATICALLY_WIDEN<CharT>("{} {}"),
                   std::chrono::year_month_day(dp), std::chrono::time_of_day(tp - dp));

   where STATICALLY_WIDEN<CharT>("{} {}") is "{} {}" if CharT is char, and L"{} {}" if
   CharT is wchar_t.

   This overload only participates in overload resolution if
   std::chrono::treat_as_floating_point_v<typename Duration::rep> is false and
   Duration\fB(1)\fP < std::chrono::days(1).
   2) Equivalent to os << std::chrono::year_month_day(tp);

.SH Return value

   os.

.SH See also

   std::formatter<std::chrono::sys_time> specialization of std::formatter that formats
   (C++20)                               a sys_time according to the provided format
                                         \fI(class template specialization)\fP
   format                                stores formatted representation of the
   (C++20)                               arguments in a new string
                                         \fI(function template)\fP
   operator<<                            outputs a year_month_day into a stream
                                         \fI(function template)\fP
