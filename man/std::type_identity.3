.TH std::type_identity 3 "2021.11.17" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::type_identity \- std::type_identity

.SH Synopsis
   Defined in header <type_traits>
   template< class T >              \fI(since C++20)\fP
   struct type_identity;

   Provides the member typedef type that names T (i.e., the identity transformation).

   The behavior of a program that adds specializations for type_identity is undefined.

.SH Member types

   Name Definition
   type T

.SH Helper types

   template< class T >                                       \fI(since C++20)\fP
   using type_identity_t = typename type_identity<T>::type;

.SH Possible implementation

   template< class T >
   struct type_identity {
       using type = T;
   };

.SH Notes

   type_identity can be used to establish non-deduced contexts in template argument
   deduction:

 template<class T>
 void f(T, T);

 template<class T>
 void g(T, std::type_identity_t<T>);

 f(4.2, 0); // error, deduced conflicting types for 'T'
 g(4.2, 0); // OK, calls g<double>

.SH Example

    This section is incomplete
    Reason: no example

.SH Category:

     * Todo no example
