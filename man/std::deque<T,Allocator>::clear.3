.TH std::deque<T,Allocator>::clear 3 "2019.08.27" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::deque<T,Allocator>::clear \- std::deque<T,Allocator>::clear

.SH Synopsis
   void clear();           \fI(until C++11)\fP
   void clear() noexcept;  \fI(since C++11)\fP

   Erases all elements from the container. After this call, size() returns zero.

   Invalidates any references, pointers, or iterators referring to contained elements.
   Any past-the-end iterators are also invalidated.

.SH Parameters

   \fI(none)\fP

.SH Return value

   \fI(none)\fP

.SH Complexity

   Linear in the size of the container, i.e., the number of elements.

  Defect reports

   The following behavior-changing defect reports were applied retroactively to
   previously published C++ standards.

      DR    Applied to          Behavior as published              Correct behavior
   LWG 2231 C++11      complexity guarantee was mistakenly     complexity reaffirmed as
                       omitted in C++11                        linear

.SH See also

   erase erases elements
         \fI(public member function)\fP
