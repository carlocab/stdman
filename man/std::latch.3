.TH std::latch 3 "2021.11.17" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::latch \- std::latch

.SH Synopsis
   Defined in header <latch>
   class latch;               \fI(since C++20)\fP

   The latch class is a downward counter of type ptrdiff_t which can be used to
   synchronize threads. The value of the counter is initialized on creation. Threads
   may block on the latch until the counter is decremented to zero. There is no
   possibility to increase or reset the counter, which makes the latch a single-use
   barrier.

   Concurrent invocations of the member functions of latch, except for the destructor,
   do not introduce data races.

   Unlike std::barrier, std::latch can be decremented by a participating thread more
   than once.

.SH Member functions

   constructor     constructs a latch
                   \fI(public member function)\fP
   destructor      destroys the latch
                   \fI(public member function)\fP
   operator=       latch is not assignable
   [deleted]       \fI(public member function)\fP
   count_down      decrements the counter in a non-blocking manner
                   \fI(public member function)\fP
   try_wait        tests if the internal counter equals zero
                   \fI(public member function)\fP
   wait            blocks until the counter reaches zero
                   \fI(public member function)\fP
   arrive_and_wait decrements the counter and blocks until it reaches zero
                   \fI(public member function)\fP
.SH Constants
   max             the maximum value of counter supported by the implementation
   \fB[static]\fP        \fI(public static member function)\fP

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   barrier reusable thread barrier
   (C++20) \fI(class template)\fP

.SH Category:

     * Todo no example
