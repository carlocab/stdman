.TH std::UnsignedIntegral 3 "2019.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::UnsignedIntegral \- std::UnsignedIntegral

.SH Synopsis
   Defined in header <concepts>
   template < class T >
   concept UnsignedIntegral = std::Integral<T> &&                         \fI(since C++20)\fP
   !std::SignedIntegral<T>;

   The concept UnsignedIntegral<T> is satisfied if and only if T is an integral type
   and std::is_signed_v<T> is false.

.SH Notes

   UnsignedIntegral<T> may be satisfied by a type that is not a unsigned integer type,
   for example, bool.

.SH See also

   is_integral checks if a type is integral type
   \fI(C++11)\fP     \fI(class template)\fP 
   is_signed   checks if a type is signed arithmetic type
   \fI(C++11)\fP     \fI(class template)\fP 
