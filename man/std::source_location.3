.TH std::source_location 3 "2021.11.17" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::source_location \- std::source_location

.SH Synopsis
   Defined in header <source_location>
   struct source_location;              \fI(since C++20)\fP

   The source_location class represents certain information about the source code, such
   as file names, line numbers, and function names. Previously, functions that desire
   to obtain this information about the call site (for logging, testing, or debugging
   purposes) must use macros so that predefined macros like __LINE__ and __FILE__ are
   expanded in the context of the caller. The source_location class provides a better
   alternative.

   source_location meets the DefaultConstructible, CopyConstructible, CopyAssignable
   and Destructible requirements. Lvalue of source_location meets the Swappable
   requirement. Additionally, the following conditions are true:

     * std::is_nothrow_move_constructible_v<std::source_location>,
     * std::is_nothrow_move_assignable_v<std::source_location>, and
     * std::is_nothrow_swappable_v<std::source_location>.

   It is intended that source_location has a small size and can be copied efficiently.

   It is unspecified whether the copy/move constructors and the copy/move assignment
   operators of source_location are trivial and/or constexpr.

.SH Member functions

         Creation
   constructor   constructs a new source_location with implementation-defined values
                 \fI(public member function)\fP
   current       constructs a new source_location corresponding to the location of the
   \fB[static]\fP      call site
                 \fI(public static member function)\fP
         Field access
   line          return the line number represented by this object
                 \fI(public member function)\fP
   column        return the column number represented by this object
                 \fI(public member function)\fP
   file_name     return the file name represented by this object
                 \fI(public member function)\fP
   function_name return the name of the function represented by this object, if any
                 \fI(public member function)\fP

.SH Example


// Run this code

 #include <iostream>
 #include <string_view>
 #include <source_location>

 void log(std::string_view message,
          const std::source_location& location = std::source_location::current())
 {
     std::cout << "info:"
               << location.file_name() << ':'
               << location.line() << ' '
               << message << '\\n';
 }

 int main()
 {
     log("Hello world!");
 }

.SH Possible output:

 info:main.cpp:16 Hello world!
