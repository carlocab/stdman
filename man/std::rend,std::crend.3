.TH std::rend,std::crend 3 "2021.11.17" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::rend,std::crend \- std::rend,std::crend

.SH Synopsis
   Defined in header <array>
   Defined in header <deque>
   Defined in header <forward_list>
   Defined in header <iterator>
   Defined in header <list>
   Defined in header <map>
   Defined in header <regex>
   Defined in header <set>
   Defined in header <span>                      (since
                                                 C++20)
   Defined in header <string>
   Defined in header <string_view>               (since
                                                 C++17)
   Defined in header <unordered_map>
   Defined in header <unordered_set>
   Defined in header <vector>
                                                        (since
   template< class C >                                  C++14)
   auto rend( C& c ) -> decltype(c.rend());             (until
                                                        C++17)
   template< class C >                                  (since
   constexpr auto rend( C& c ) ->                       C++17)
   decltype(c.rend());
   template< class C >                                          (since
   auto rend( const C& c ) ->                                   C++14)
   decltype(c.rend());                                          (until
                                                                C++17)
   template< class C >                                          (since
   constexpr auto rend( const C& c ) ->                         C++17)
   decltype(c.rend());                       \fB(1)\fP
   template< class T, size_t N >                                        (since
   reverse_iterator<T*> rend( T (&array)[N]                             C++14)
   );                                                                   (until
                                                 \fB(1)\fP                    C++17)
   template< class T, size_t N >                                        (since
   constexpr reverse_iterator<T*> rend( T                               C++17)
   (&array)[N] );                                       \fB(2)\fP
   template< class C >                                                          (since
   auto crend( const C& c ) ->                                                  C++14)
   decltype(std::rend(c));                                                      (until
                                                                \fB(3)\fP             C++17)
   template< class C >                                                          (since
   constexpr auto crend( const C& c ) ->                                        C++17)
   decltype(std::rend(c));

   Returns an iterator to the reverse-end of the given container c or array array.

   1) Returns a possibly const-qualified iterator to the reverse-end of the container
   c.
   2) Returns std::reverse_iterator<T*> to the reverse-end of the array array.
   3) Returns a const-qualified iterator to the reverse-end of the container c.

   range-rbegin-rend.svg

.SH Parameters

   c     - a container with a rend member function
   array - an array of arbitrary type

.SH Return value

   An iterator to the reverse-end of c or array

   Overloads

   Custom overloads of rend may be provided for classes that do not expose a suitable
   rend() member function, yet can be iterated. The following overload is already
   provided by the standard library:

   rend(std::initializer_list) specializes std::rend
   \fI(C++14)\fP                     \fI(function)\fP

.SH Example


// Run this code

 #include <iostream>
 #include <vector>
 #include <iterator>
 #include <algorithm>

 int main()
 {
     int a[] = {4, 6, -3, 9, 10};
     std::cout << "Array backwards: ";
     std::copy(std::rbegin(a), std::rend(a), std::ostream_iterator<int>(std::cout, " "));

     std::cout << "\\nVector backwards: ";
     std::vector<int> v = {4, 6, -3, 9, 10};
     std::copy(std::rbegin(v), std::rend(v), std::ostream_iterator<int>(std::cout, " "));
 }

.SH Output:

 Array backwards: 10 9 -3 6 4
 Vector backwards: 10 9 -3 6 4

.SH See also

   end
   cend    returns an iterator to the end of a container or array
   \fI(C++11)\fP \fI(function template)\fP
   \fI(C++14)\fP
   rbegin  returns a reverse iterator to a container or array
   crbegin \fI(function template)\fP
   \fI(C++14)\fP
   begin
   cbegin  returns an iterator to the beginning of a container or array
   \fI(C++11)\fP \fI(function template)\fP
   \fI(C++14)\fP
