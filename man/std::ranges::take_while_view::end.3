.TH std::ranges::take_while_view::end 3 "2021.11.17" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::ranges::take_while_view::end \- std::ranges::take_while_view::end

.SH Synopsis
   constexpr auto end() requires (!__SimpleView<V>);           \fB(1)\fP \fI(since C++20)\fP
   constexpr auto end() const requires ranges::range<const V>; \fB(2)\fP \fI(since C++20)\fP

   Returns a sentinel representing the end of the view.

   1) Effectively returns /*sentinel*/<false>(ranges::end(base_),
   std::addressof(pred())), where base_ denotes the underlying view.
   2) Effectively returns /*sentinel*/<true>(ranges::end(base_),
   std::addressof(pred())), where base_ denotes the underlying view.

   Overload \fB(1)\fP does not participate in overload resolution if V is a simple view (that
   is, if V and const V are views with the same iterator and sentinel types).

.SH Parameters

   \fI(none)\fP

.SH Return value

   sentinel representing the end of the view

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   begin      returns an iterator to the beginning
              \fI(public member function)\fP
   operator== compares a sentinel with an iterator returned from take_while_view::begin
              \fI(function)\fP

.SH Category:

     * Todo no example
