.TH std::array::fill 3 "2021.11.17" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::array::fill \- std::array::fill

.SH Synopsis
   void fill( const T& value );            \fI(since C++11)\fP
                                           \fI(until C++20)\fP
   constexpr void fill( const T& value );  \fI(since C++20)\fP

   Assigns the given value value to all elements in the container.

.SH Parameters

   value - the value to assign to the elements

.SH Return value

   \fI(none)\fP

.SH Complexity

   Linear in the size of the container.

.SH Example


// Run this code

 #include <array>
 #include <iostream>
 #include <algorithm>

 int main()
 {
     constexpr int xy = 4;

     using Cell = std::array<unsigned char, 8>;

     std::array<Cell, xy * xy> board;

     board.fill({ {0xE2, 0x96, 0x84, 0xE2, 0x96, 0x80, 0, 0} }); // "▄▀";

     std::for_each(board.cbegin(), board.cend(), [xy, O=1](const auto& c) mutable
     {
         std::cout << c.data() << ((O++ % xy) ? "" : "\\n");
     });
 }

.SH Output:

 ▄▀▄▀▄▀▄▀
 ▄▀▄▀▄▀▄▀
 ▄▀▄▀▄▀▄▀
 ▄▀▄▀▄▀▄▀

.SH See also

   fill   copy-assigns the given value to every element in a range
          \fI(function template)\fP
   fill_n copy-assigns the given value to N elements in a range
          \fI(function template)\fP
