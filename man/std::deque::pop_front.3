.TH std::deque::pop_front 3 "2022.03.29" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::deque::pop_front \- std::deque::pop_front

.SH Synopsis
   void pop_front();

   Removes the first element of the container. If there are no elements in the
   container, the behavior is undefined.

   Iterators and references to the erased element are invalidated. It is
   unspecified whether the past-the-end iterator is invalidated if the    \fI(until C++11)\fP
   element is the last element in the container. Other references and
   iterators are not affected.
   Iterators and references to the erased element are invalidated. If the
   element is the last element in the container, the past-the-end         \fI(since C++11)\fP
   iterator is also invalidated. Other references and iterators are not
   affected.

.SH Parameters

   \fI(none)\fP

.SH Return value

   \fI(none)\fP

.SH Complexity

   Constant.

.SH Exceptions

   Does not throw.

.SH Example


// Run this code

 #include <deque>
 #include <iostream>

 auto print = [](const auto& con) {
     for (auto const& item : con)
         std::cout << item;
     std::cout << '\\n';
 };

 int main() {
     std::deque<char> letters{'A','B','C','D'};

     for (char c{letters.back()}; c != 'H' ;) {
         letters.push_back(++c);
         print(letters);
         letters.pop_front();
     }
 }

.SH Output:

 ABCDE
 BCDEF
 CDEFG
 DEFGH

.SH See also

   pop_back   removes the last element
              \fI(public member function)\fP
   push_front inserts an element to the beginning
              \fI(public member function)\fP
