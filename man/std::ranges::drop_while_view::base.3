.TH std::ranges::drop_while_view::base 3 "2021.11.17" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::ranges::drop_while_view::base \- std::ranges::drop_while_view::base

.SH Synopsis
   constexpr V base() const& requires std::copy_constructible<V>; \fB(1)\fP \fI(since C++20)\fP
   constexpr V base() &&;                                         \fB(2)\fP \fI(since C++20)\fP

   Returns a copy of the underlying view.

   1) Copy constructs the result from the underlying view.
   2) Move constructs the result from the underlying view.

.SH Parameters

   \fI(none)\fP

.SH Return value

   A copy of the underlying view.

.SH Example


// Run this code

 #include <array>
 #include <ranges>
 #include <iostream>

 void print(auto const& container) {
     for (const auto& elem : container)
         std::cout << elem << ' ';
     std::cout << '\\n';
 }

 int main()
 {
     std::array data{ 1, 2, 3, 4 };
     print(data);

     auto stub = [](int x) { return x < 2; };
     auto view = std::ranges::drop_while_view{ data, stub };

     auto base = view.base(); // `base` refers to the `data`

     std::ranges::reverse(base); //< changes `data` indirectly
     print(data);
 }

.SH Output:

 1 2 3 4
 4 3 2 1
