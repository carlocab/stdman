.TH std::atomic_flag_notify_all 3 "2021.11.17" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::atomic_flag_notify_all \- std::atomic_flag_notify_all

.SH Synopsis
   Defined in header <atomic>
   template< class T >
   void atomic_flag_notify_all( std::atomic_flag<T>* object ) noexcept;
   template< class T >                                                   \fI(since C++20)\fP
   void atomic_flag_notify_all( volatile std::atomic_flag<T>* object )
   noexcept;

   Performs atomic notifying operations.

   Unblocks all threads blocked in atomic waiting operations (i.e.
   std::atomic_flag_wait(), std::atomic_flag_wait_explicit(), or
   std::atomic_flag::wait()) on *object, if there are any; otherwise does nothing.

   Equivalent to object->notify_all().

.SH Parameters

   object - pointer to the atomic_flag object to notify

.SH Return value

   \fI(none)\fP

.SH Notes

   This form of change-detection is often more efficient than simple polling or pure
   spinlocks.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   notify_one                notifies at least one thread waiting on the atomic object
   (C++20)                   \fI(public member function of std::atomic_flag)\fP
   notify_all                notifies all threads blocked waiting on the atomic object
   (C++20)                   \fI(public member function of std::atomic_flag)\fP
   atomic_flag_wait
   atomic_flag_wait_explicit blocks the thread until notified and the flag changes
   (C++20)                   \fI(function)\fP
   (C++20)
   atomic_flag_notify_one    notifies a thread blocked in atomic_flag_wait
   (C++20)                   \fI(function)\fP

.SH Categories:

     * Uses of dcl rev begin with nonempty note
     * Todo no example
