.TH std::experimental::simd_cast,std::experimental::static_simd_cast 3 "2019.08.27" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::simd_cast,std::experimental::static_simd_cast \- std::experimental::simd_cast,std::experimental::static_simd_cast

.SH Synopsis
   Defined in header <experimental/simd>
   template < class T, class Abi >

   fixed_size_simd<T, simd_size_v<T, Abi>>                        \fB(1)\fP

   to_fixed_size( const simd<T, Abi>& v ) noexcept;
   template < class T, class Abi >

   fixed_size_simd_mask<T, simd_size_v<T, Abi>>                   \fB(2)\fP

   to_fixed_size( const simd_mask<T, Abi>& v ) noexcept;
   template < class T, std::size_t N >

   native_simd<T>                                                 \fB(3)\fP

   to_native( const fixed_size_simd<T, N>& v ) noexcept;
   template < class T, std::size_t N >

   native_simd_mask<T>                                            \fB(4)\fP

   to_native( const fixed_size_simd_mask<T, N>>& v ) noexcept;
   template < class T, std::size_t N >

   simd<T>                                                        \fB(5)\fP

   to_compatible( const fixed_size_simd<T, N>& v ) noexcept;
   template < class T, std::size_t N >

   simd_mask<T>                                                   \fB(6)\fP

   to_compatible( const fixed_size_simd_mask<T, N>& v ) noexcept;

   Returns an simd or simd_mask object with the same elements, but a different ABI.

   3-6) these functions do not participate in overloading resolution unless N is the
   same as the size of the return type.

.SH Parameters

   v - the input simd or simd_mask object

.SH Return value

   The simd or simd_mask object with the specified ABI.

.SH Example
